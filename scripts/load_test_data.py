#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/load_test_data.py
    –∏–ª–∏ —á–µ—Ä–µ–∑ make: make load-test-data
"""
import asyncio
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.insert(0, str(Path(__file__).parent.parent))

from sqlalchemy import text
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker

from src.config import settings
from src.utils.cryptographer import Cryptographer


async def load_test_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    engine = create_async_engine(settings.db_url, echo=True)
    async_session = sessionmaker(
        engine, class_=AsyncSession, expire_on_commit=False
    )
    
    async with async_session() as session:
        try:
            print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–µ—Ä –¥–ª—è –ø–∞—Ä–æ–ª–µ–π
            crypto = Cryptographer(settings.CRYPTO_KEY)
            test_password = crypto.encrypt("Test123!")
            
            # 0. –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print("üìù –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å 'user'...")
            await session.execute(
                text(
                    """
                    INSERT INTO role (name, rights_create, rights_read, rights_update, rights_delete) 
                    VALUES ('user', FALSE, TRUE, FALSE, FALSE)
                    ON CONFLICT (name) DO NOTHING;
                    """
                )
            )
            
            # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            print("üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            await session.execute(
                text(
                    """
                    INSERT INTO "user" (login, hashed_password, full_name, role_id) VALUES
                    ('ivanov', :password, '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á', 2),
                    ('petrov', :password, '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á', 2),
                    ('sidorova', :password, '–°–∏–¥–æ—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞', 2),
                    ('kuznetsov', :password, '–ö—É–∑–Ω–µ—Ü–æ–≤ –ê–ª–µ–∫—Å–µ–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á', 2),
                    ('smirnova', :password, '–°–º–∏—Ä–Ω–æ–≤–∞ –ï–ª–µ–Ω–∞ –î–º–∏—Ç—Ä–∏–µ–≤–Ω–∞', 2)
                    ON CONFLICT (login) DO NOTHING;
                    """
                ).bindparams(password=test_password)
            )
            
            # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
            print("üìö –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã...")
            await session.execute(
                text(
                    """
                    INSERT INTO subject (name) VALUES
                    ('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'),
                    ('–§–∏–∑–∏–∫–∞'),
                    ('–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'),
                    ('–ò—Å—Ç–æ—Ä–∏—è'),
                    ('–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫')
                    ON CONFLICT (name) DO NOTHING;
                    """
                )
            )
            
            # 3. –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º
            print("üîó –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫ –ø—Ä–µ–¥–º–µ—Ç–∞–º...")
            await session.execute(
                text(
                    """
                    INSERT INTO subject_user (subject_id, user_id) 
                    SELECT s.id, u.id 
                    FROM subject s, "user" u 
                    WHERE u.login IN ('ivanov', 'petrov') AND s.name = '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞'
                    
                    UNION ALL
                    
                    SELECT s.id, u.id 
                    FROM subject s, "user" u 
                    WHERE u.login IN ('sidorova', 'kuznetsov') AND s.name = '–§–∏–∑–∏–∫–∞'
                    
                    UNION ALL
                    
                    SELECT s.id, u.id 
                    FROM subject s, "user" u 
                    WHERE u.login IN ('smirnova', 'ivanov') AND s.name = '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'
                    ON CONFLICT DO NOTHING;
                    """
                )
            )
            
            # 4. –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –ø—Ä–æ–∫—Ç–æ—Ä–∏–Ω–≥–∞
            print("üéØ –°–æ–∑–¥–∞–µ–º —Ç–∏–ø—ã –ø—Ä–æ–∫—Ç–æ—Ä–∏–Ω–≥–∞...")
            await session.execute(
                text(
                    """
                    INSERT INTO proctoring_type (name, absence_person, extra_person, person_substitution, looking_away, mouth_opening, hints_outside) VALUES
                    ('–°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å', TRUE, TRUE, TRUE, TRUE, TRUE, TRUE),
                    ('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å', TRUE, TRUE, TRUE, TRUE, FALSE, FALSE),
                    ('–ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å', TRUE, TRUE, FALSE, FALSE, FALSE, FALSE),
                    ('–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å', TRUE, FALSE, FALSE, FALSE, FALSE, FALSE)
                    ON CONFLICT (name) DO NOTHING;
                    """
                )
            )
            
            # 5. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–∫—Ç–æ—Ä–∏–Ω–≥–∞
            print("üìä –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–∫—Ç–æ—Ä–∏–Ω–≥–∞...")
            await session.execute(
                text(
                    """
                    INSERT INTO proctoring_result (detected_absence_person, detected_extra_person, detected_person_substitution, detected_looking_away, detected_mouth_opening, detected_hints_outside) VALUES
                    (FALSE, FALSE, FALSE, FALSE, FALSE, FALSE),
                    (FALSE, FALSE, FALSE, TRUE, FALSE, FALSE),
                    (FALSE, TRUE, FALSE, FALSE, FALSE, FALSE),
                    (FALSE, FALSE, FALSE, FALSE, TRUE, FALSE),
                    (TRUE, FALSE, FALSE, FALSE, FALSE, FALSE);
                    """
                )
            )
            
            # 6. –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏–∏ –ø—Ä–æ–∫—Ç–æ—Ä–∏–Ω–≥–∞
            print("üé• –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏–∏ –ø—Ä–æ–∫—Ç–æ—Ä–∏–Ω–≥–∞...")
            
            # –°–µ—Å—Å–∏—è 1: –ò–≤–∞–Ω–æ–≤ - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
            await session.execute(
                text(
                    """
                    INSERT INTO proctoring (user_id, subject_id, type_id, result_id)
                    SELECT 
                        u.id,
                        s.id,
                        pt.id,
                        pr.id
                    FROM "user" u
                    CROSS JOIN subject s
                    CROSS JOIN proctoring_type pt
                    CROSS JOIN proctoring_result pr
                    WHERE u.login = 'ivanov' 
                      AND s.name = '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞' 
                      AND pt.name = '–°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å'
                      AND pr.id = 1
                    LIMIT 1
                    ON CONFLICT DO NOTHING;
                    """
                )
            )
            
            # –°–µ—Å—Å–∏—è 2: –ü–µ—Ç—Ä–æ–≤ - –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞
            await session.execute(
                text(
                    """
                    INSERT INTO proctoring (user_id, subject_id, type_id, result_id)
                    SELECT 
                        u.id,
                        s.id,
                        pt.id,
                        pr.id
                    FROM "user" u
                    CROSS JOIN subject s
                    CROSS JOIN proctoring_type pt
                    CROSS JOIN proctoring_result pr
                    WHERE u.login = 'petrov' 
                      AND s.name = '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞' 
                      AND pt.name = '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å'
                      AND pr.id = 2
                    LIMIT 1
                    ON CONFLICT DO NOTHING;
                    """
                )
            )
            
            # –°–µ—Å—Å–∏—è 3: –°–∏–¥–æ—Ä–æ–≤–∞ - –§–∏–∑–∏–∫–∞
            await session.execute(
                text(
                    """
                    INSERT INTO proctoring (user_id, subject_id, type_id, result_id)
                    SELECT 
                        u.id,
                        s.id,
                        pt.id,
                        pr.id
                    FROM "user" u
                    CROSS JOIN subject s
                    CROSS JOIN proctoring_type pt
                    CROSS JOIN proctoring_result pr
                    WHERE u.login = 'sidorova' 
                      AND s.name = '–§–∏–∑–∏–∫–∞' 
                      AND pt.name = '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å'
                      AND pr.id = 3
                    LIMIT 1
                    ON CONFLICT DO NOTHING;
                    """
                )
            )
            
            await session.commit()
            
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
            print("\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            print("   Login: ivanov, petrov, sidorova, kuznetsov, smirnova")
            print("   Password: Test123!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
            await session.rollback()
            raise
        finally:
            await engine.dispose()


async def clear_test_data():
    """–£–¥–∞–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã"""
    
    engine = create_async_engine(settings.db_url, echo=True)
    async_session = sessionmaker(
        engine, class_=AsyncSession, expire_on_commit=False
    )
    
    async with async_session() as session:
        try:
            print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
            
            # –£–¥–∞–ª—è–µ–º –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–∑-–∑–∞ foreign keys
            await session.execute(
                text(
                    """
                    DELETE FROM proctoring 
                    WHERE user_id IN (
                        SELECT id FROM "user" 
                        WHERE login IN ('ivanov', 'petrov', 'sidorova', 'kuznetsov', 'smirnova')
                    );
                    """
                )
            )
            
            await session.execute(
                text("DELETE FROM proctoring_result WHERE id BETWEEN 1 AND 5;")
            )
            
            await session.execute(
                text(
                    """
                    DELETE FROM proctoring_type 
                    WHERE name IN ('–°—Ç—Ä–æ–≥–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å', '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å', '–ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å', '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å');
                    """
                )
            )
            
            await session.execute(
                text(
                    """
                    DELETE FROM subject_user 
                    WHERE subject_id IN (
                        SELECT id FROM subject 
                        WHERE name IN ('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ò—Å—Ç–æ—Ä–∏—è', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫')
                    );
                    """
                )
            )
            
            await session.execute(
                text(
                    """
                    DELETE FROM subject 
                    WHERE name IN ('–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '–§–∏–∑–∏–∫–∞', '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '–ò—Å—Ç–æ—Ä–∏—è', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫');
                    """
                )
            )
            
            await session.execute(
                text(
                    """
                    DELETE FROM "user" 
                    WHERE login IN ('ivanov', 'petrov', 'sidorova', 'kuznetsov', 'smirnova');
                    """
                )
            )
            
            await session.execute(
                text("DELETE FROM role WHERE name='user';")
            )
            
            await session.commit()
            
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            await session.rollback()
            raise
        finally:
            await engine.dispose()


if __name__ == "__main__":
    import argparse
    
    parser = argparse.ArgumentParser(description="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    parser.add_argument(
        "--clear",
        action="store_true",
        help="–£–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∫–∏"
    )
    
    args = parser.parse_args()
    
    if args.clear:
        asyncio.run(clear_test_data())
    else:
        asyncio.run(load_test_data())
